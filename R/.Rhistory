prop_dif_pos_and_neg[ex.subset.prop]$prop_CMIP5_BNU.ESM_r1i1p1_hc_1700_1800i_V81_equal2$Data*modelweights.ex["CMIP5_BNU.ESM_r1i1p1"]
mapply(function(x,y) x$Data * y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
mapply(function(x,y) redim(x$Data,drop = TRUE) * y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
mapply(function(x,y) redim(x$Data,drop = TRUE)*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
mapply(function(x,y) redim(x,drop = TRUE)$Data*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
modelweights.ex
prop.ex.subset.weighted <-mapply(function(x,y) redim(x,drop = TRUE)$Data*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
prop.ex.subset.weighted.grids <-mapply(function(x,y) redim(x,drop = TRUE)$Data*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
prop.ex.subset.weighted <- Reduce('+', prop.ex.subset.weighted.grids)
prop.ex.subset.weighted
newgrid <- prop_dif_pos_and_neg[[1]]
newgrid$Data <- prop.ex.subset.weighted
spatialPlot(newgrid,as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
names.attr = sort(combinames)[-c(ind6,indearth)],
spatialPlot(newgrid,names.attr = sort(combinames)[-c(ind6,indearth)],as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
prop.ex.subset.weighted.grids <-mapply(function(x,y) x$Data*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = modelweights.ex,SIMPLIFY = FALSE)
prop.ex.subset.weighted <- Reduce('+', prop.ex.subset.weighted.grids)
newgrid <- prop_dif_pos_and_neg[[1]]
newgrid$Data <- prop.ex.subset.weighted
spatialPlot(newgrid,names.attr = sort(combinames)[-c(ind6,indearth)],as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
prop.ex.subset.unweighted.grids <-mapply(function(x,y) x$Data*y,x = prop_dif_pos_and_neg[ex.subset.prop], y = 1/length(ex.subset.prop),SIMPLIFY = FALSE)
prop.ex.subset.unweighted <- Reduce('+', prop.ex.subset.unweighted.grids)
spatialPlot(newgrid,names.attr = sort(combinames)[-c(ind6,indearth)],as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
oldgrid <- prop_dif_pos_and_neg[[1]]
oldgrid$Data <- prop.ex.subset.unweighted
spatialPlot(oldgrid,names.attr = sort(combinames)[-c(ind6,indearth)],as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
##########################################
# Model weights cmip5 set
##########################################
modelweights <- IPweight(-log(hellinger_coefficients),"interim_10d_akima_cubic",40,25)
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
modelweights
par(mar = c(5,8,4,2)+0.1)
plot(modelweights.ex,xaxt =  "n", ylim = c(0,0.6), ylab = expression("modelweights w"[i]),xlab = "", pch = 16, col = "blue")
par(mar = c(8, 4, 4, 2))
par(mar = c(8, 8, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
par(mar = c(8, 20, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
par(mar = c(8, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
par(mar = c(0, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
par(mar = c(20, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
par(mar = c(10, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
par(mar = c(8, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
par(mar = c(8, 0, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
par(mar = c(8, 4, 8, 2))
plot(modelweights,xaxt =  "n",xlab = "")
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
##########################################
# Model weights cmip5 set
##########################################
matri <-log(hellinger_coefficients)
log(hellinger_coefficients)
##########################################
# Model weights cmip5 set
##########################################
matri <-log(hellinger_coefficients)[1:(length(hellinger_coefficients)-2)]
modelweights <- IPweight(matri,"interim_10d_akima_cubic",40,25)
##########################################
# Model weights cmip5 set
##########################################
matri <--log(hellinger_coefficients)[1:(length(hellinger_coefficients)-2)]
modelweights <- IPweight(matri,"interim_10d_akima_cubic",40,25)
-log(hellinger_coefficients)[1:(length(hellinger_coefficients)-2)]
-log(hellinger_coefficients)
##########################################
# Model weights cmip5 set
##########################################
matri <--log(hellinger_coefficients)[1:(length(hellinger_coefficients)-2),1:(length(hellinger_coefficients)-2)]
1:(length(hellinger_coefficients)-2)
##########################################
# Model weights cmip5 set
##########################################
matri <--log(hellinger_coefficients)[1:(nrow(hellinger_coefficients)-2),1:(ncol(hellinger_coefficients)-2)]
modelweights <- IPweight(matri,"interim_10d_akima_cubic",40,25)
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
bd.cmips.fut.vs.hist <- diag(-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.hists),names(clim.futures)])
bd.cmips.fut.vs.hist.wrt.int <- ((-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.futures),"interim_10d_akima_cubic"])-(-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.hists),"interim_10d_akima_cubic"]))
bd.cmips.fut.vs.hist.wrt.ncep<- (-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.futures),"ncep_10d"])-(-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.hists),"ncep_10d"])
bd.cmips.fut.vs.hist.wrt.jra55 <- (-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.futures),"JRA55_10d_akima_cubic"])-(-log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.hists),"JRA55_10d_akima_cubic"])
bd.cmips.fut.vs.ncep <- -log(hellinger_coefficients_CMIP5_hist_vs_fut)[names(clim.futures),"ncep_10d"]
bd.cmips.hist.vs.int <- -log(hellinger_coefficients)[names(clim.hists),"interim_10d_akima_cubic"]
bd.cmips.hist.vs.ncep <- -log(hellinger_coefficients)[names(clim.hists),"ncep_10d"]
bd.cmips.hist.vs.JRA55 <- -log(hellinger_coefficients)[names(clim.hists),"JRA55_10d_akima_cubic"]
x <- "CMIP5_inmcm4_r1i1p1"
bd.cmips.hist.vs.x <- -log(hellinger_coefficients)[names(clim.hists),x ]
plot(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips,
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"),
xlab = expression("d"[B]*"(BN"[fut]*",BN"[hist]*")"),
main = "change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs \n(= Bhattacharya distance between future and historical BN)"
)
dev.off()
plot(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips,
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"),
xlab = expression("d"[B]*"(BN"[fut]*",BN"[hist]*")"),
main = "change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs \n(= Bhattacharya distance between future and historical BN)"
)
text(40,3, paste("cor = ",round(cor(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips, method = "spearman"),2)))
lm1 <- lm(gmt.mean.difs.cmips.vs.cmips~bd.cmips.fut.vs.hist,data.frame(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips))
lines(x=c(18,36) , y = c(lm1$coefficients[2]*18+lm1$coefficients[1],lm1$coefficients[2]*36+lm1$coefficients[1]),col = 'red')
text(40,2.9, paste("R^2 = ",round(summary(lm1)$r.squared,3)))
dev.off()
# change in dependency pattern versus historical difference between cmip model and reanalysis
plot(bd.cmips.fut.vs.hist,bd.cmips.hist.vs.int)
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 25,sS =25)
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
sum(modelweights*gmt.hists.cmips)
sum(gmt.hists.cmips)/length(gmt.hists.cmips)
sum(modelweights*keltoC(gmt.futures.cmips))
sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
plot(sum(modelweights*gmt.difs))
modelweights[names(clim.hists)]
keltoC <-function(x)(x+273)%%273
keltoC(sapply(clim.reans,gmt))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
sum(modelweights*gmt.hists.cmips)
bindGrid(oldgrid,newgrid, dimension = c("member"))
compareoldnew <- bindGrid(oldgrid,newgrid, dimension = c("member"))
spatialPlot(compareoldnew,names.attr = sort(combinames)[-c(ind6,indearth)],as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
spatialPlot(compareoldnew,as.table = TRUE,backdrop.theme = "coastline", lonCenter = 180, main = list(paste0(attr(prop_dif_pos_and_neg[[1]]$Data,"climatology:fun"))), at = seq(-0.85,0.85,0.01),region = TRUE,
col.regions= col,
set.min = -0.85,set.max = 0.85, colorkey = list(width = 0.6, lables = list(cex = 0.5)))
sum(modelweights*gmt.hists.cmips)
sum(gmt.hists.cmips)/length(gmt.hists.cmips)
sum(modelweights*keltoC(gmt.futures.cmips))
sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
modelweights
gmt.mean.difs.cmips.vs.cmips
bd.cmips.fut.vs.hist
plot(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips,
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"),
xlab = expression("d"[B]*"(BN"[fut]*",BN"[hist]*")"),
main = "change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs \n(= Bhattacharya distance between future and historical BN)"
)
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 40,sS =25)
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
40
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 40,sS =35)
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
modelweights
modelweights
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
modelweights
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 40,sS =35)
modelweights
par(mar = c(8, 4, 4, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 40,sS =35)
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 15,sS =25)
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
###############
# Check temperature increase, weighted model ensemble
###############
modelweights <- IPweight(-log(hellinger_coefficients)[c(names(clim.hists),"interim_10d_akima_cubic"),c(names(clim.hists),"interim_10d_akima_cubic")],"interim_10d_akima_cubic",sD = 20,sS =25)
par(mar = c(8, 4, 0, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
mean.hist.unweighted <- sum(gmt.hists.cmips)/length(gmt.hists.cmips)
mean.fut.weighted <- sum(modelweights*keltoC(gmt.futures.cmips))
mean.fut.unweighted <- sum(keltoC(gmt.futures.cmips))/length(gmt.futures.cmips)
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
mean.hist.weighted
mean.hist.unweighted
mean.fut.weighted
mean.fut.unweighted
gmt.reans <- sapply(clim.reans,gmt)
gmt.reans
plot(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips,
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"),
xlab = expression("d"[B]*"(BN"[fut]*",BN"[hist]*")"),
main = "change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs \n(= Bhattacharya distance between future and historical BN)"
)
text(40,3, paste("cor = ",round(cor(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips, method = "spearman"),2)))
lm1 <- lm(gmt.mean.difs.cmips.vs.cmips~bd.cmips.fut.vs.hist,data.frame(bd.cmips.fut.vs.hist,gmt.mean.difs.cmips.vs.cmips))
lines(x=c(18,36) , y = c(lm1$coefficients[2]*18+lm1$coefficients[1],lm1$coefficients[2]*36+lm1$coefficients[1]),col = 'red')
mean.fut.weighted - mean.hist.weighted
mean.fut.unweighted- mean.hist.unweighted
abline(mean.fut.weighted - mean.hist.weighted)
abline(h = mean.fut.weighted - mean.hist.weighted)
abline(h = mean.fut.unweighted- mean.hist.unweighted)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue")
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",pch = 2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = ""
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
abline(h = mean.fut.unweighted- mean.hist.unweighted)
abline(h = mean.fut.unweighted- mean.hist.unweighted,lty = 2)
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
par(mar = c(8, 4, 1, 2))
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
abline(h = mean.fut.unweighted- mean.hist.unweighted,lty = 2)
legend("bottomleft",legend = c("weighted","unweighted"), col = c("blue","black"),lty = 2)
# change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs
plotname<- "/oceano/gmeteo/WORK/lisette/Trabajo/R_practice/exp_GCMs/figs/weights/deltaGMT_weighted_vs_unweighted_CMIP5.pdf"
pdf(plotname,height = 5, width = 10)
par(mar = c(8, 4, 1, 2))
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
abline(h = mean.fut.unweighted- mean.hist.unweighted,lty = 2)
legend("bottomleft",legend = c("weighted","unweighted"), col = c("blue","black"),lty = 2)
dev.off()
par(mar = c(9, 4, 1, 2))
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
# change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs
plotname<- "/oceano/gmeteo/WORK/lisette/Trabajo/R_practice/exp_GCMs/figs/weights/deltaGMT_weighted_vs_unweighted_CMIP5.pdf"
pdf(plotname,height = 5, width = 10)
par(mar = c(9, 4, 1, 2))
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
abline(h = mean.fut.unweighted- mean.hist.unweighted,lty = 2)
legend("bottomleft",legend = c("weighted","unweighted"), col = c("blue","black"),lty = 2)
dev.off()
xlabels=gsub("_r1i1p1","",gsub("CMIP5_","",gsub("historical","",names(modelweights))))
# change in Global Mean Temp versus change in spatial dependency structure CMIP5 BNs
plotname<- "/oceano/gmeteo/WORK/lisette/Trabajo/R_practice/exp_GCMs/figs/weights/deltaGMT_weighted_vs_unweighted_CMIP5.pdf"
pdf(plotname,height = 5, width = 10)
par(mar = c(9, 4, 1, 2))
plot(gmt.mean.difs.cmips.vs.cmips,xaxt =  "n",xlab = "",
ylab = bquote(Delta ~ "Global Mean Temp (fut-hist)"), main = "change in Global Mean Temp  weighted versus unweighted")
xlabels=gsub("_r1i1p1","",gsub("CMIP5_","",gsub("historical","",names(modelweights))))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = mean.fut.weighted - mean.hist.weighted, col = "blue",lty = 2)
abline(h = mean.fut.unweighted- mean.hist.unweighted,lty = 2)
legend("bottomleft",legend = c("weighted","unweighted"), col = c("blue","black"),lty = 2)
dev.off()
par(mar = c(9, 4, 1, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("historical","",names(modelweights)))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "red")
abline(h = 1/length(modelweights), lty = 2, col = "grey")
par(mar = c(9, 4, 1, 2))
plot(modelweights,xaxt =  "n",xlab = "")
xlabels=gsub("_r1i1p1","",gsub("CMIP5_","",gsub("historical","",names(modelweights))))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "grey")
plot(modelweights,xaxt =  "n",xlab = "", pch = 16)
xlabels=gsub("_r1i1p1","",gsub("CMIP5_","",gsub("historical","",names(modelweights))))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "grey")
text(25,0.12, bquote(sigma ~"D")
mean.hist.weighted <- sum(modelweights*gmt.hists.cmips)
text(25,0.12, bquote(sigma ~"D"))
text(25,0.11, bquote(sigma ~"S"))
text(25,0.12, bquote(sigma~"D = 20"))
text(25,0.11, bquote(sigma~"S = 25"))
plotname<- "/oceano/gmeteo/WORK/lisette/Trabajo/R_practice/exp_GCMs/figs/weights/weights_CMIP5.pdf"
pdf(plotname,height = 5, width = 10)
par(mar = c(9, 4, 1, 2))
plot(modelweights,xaxt =  "n",xlab = "", pch = 16)
xlabels=gsub("_r1i1p1","",gsub("CMIP5_","",gsub("historical","",names(modelweights))))
axis(1, at=1:length(modelweights),labels = xlabels, col.axis="red", las=2)
abline(h = 1/length(modelweights), lty = 2, col = "grey")
text(25,0.12, bquote(sigma~"D = 20"))
text(25,0.11, bquote(sigma~"S = 25"))
dev.off()
###################################################################################
# load ERA5 tp y t2m
###################################################################################
setwd("~/data/Untitled/Trabajo/R_practice/exp_compound")
# source("../../creds")
library(devtools)
library(loadeR)
rJava::.jinit(parameters = "-Xmx1g")
library(transformeR)
# library(visualizeR)
####################################################################################
# ERA5 t2m y tp 
# 1981 t/m 2010
####################################################################################
# year <- 1981 
# dir.create(paste0("/data/Untitled/Trabajo/R_practice/exp_compound/data/",var))
for(year in 1994:2010){
  var <- "t2m"
  if (var =="t2m"){aggr.fun <- "mean"} else if (var == "tp"){aggr.fun <- "sum"}
  files <- list.files(paste0("/oceano/gmeteo/WORK/DATA/C3S-CDS/ERA5/day/",var,"/",year), full.names = T)
  names.ext <- list.files(paste0("/oceano/gmeteo/WORK/DATA/C3S-CDS/ERA5/day/",var,"/",year))
  names <- gsub(".nc", "",names.ext)
  gridList.daily.year <- lapply(files, function(x){loadGridData(x,var=var)})# Aqui hay problemas
  names(gridList.daily.year) <- names
  grid.daily.year <- bindGrid(gridList.daily.year,dimension = "time")
  gridList.daily.year<- NULL
  grid.monthly.year <- aggregateGrid(grid.daily.year,aggr.m = list(FUN = aggr.fun))
  grid.daily.year <- NULL
  grid.monthly.year.5d <- upscaleGrid(grid.monthly.year, times = 20,aggr.fun = list(FUN = aggr.fun,na.rm = TRUE))
  grid.monthly.year <- NULL
  assign(paste0(var,"_ERA5_monthly_",year),grid.monthly.year.5d)
  save(list = paste0(var,"_ERA5_monthly_",year),file = paste0("/data/Untitled/Trabajo/R_practice/exp_compound/data/",var,"/",var,"_ERA5_monthly_",year,".rda"))
  rm(list = ls())
  gc()
}
rm(list = ls())
q()
########################################################
rm(list = ls())
setwd("~/data/Untitled/Trabajo/R_practice/exp_compound")
library(bnlearn)
library(transformeR)
library(magrittr)
library(igraph)
source("../R/Functions/BasicNetworkFunctions.R")
degrees <- "5d"
mask <- TRUE # Only land or land & sea
limit <- TRUE # include poles?
b <- 3 # How many levels TP & T2M:
compound <- "CD" # Which type of compound Hot Dry, Cold Dry, Hot Wet, Cold Wet, all together, all.distinct
global_mean_temp <- TRUE # Extra node for global_mean_temp?
combi <- "only" # only Compound nodes or also "TPT2M" nodes
k <- 0 # Which permutation of variables later
algo<- "tabu" # Which algorithm
score<- "bic" # Which score in algorithm
if(isTRUE(limit)){lim <- "_lim"} else {lim <-""}
if(!is.null(compound)){comp <- paste0("_comp_",compound)} else {comp <-""}
if(isTRUE(mask)){superf <- "_land"}else {superf <-"_landsea"}
if(isTRUE(global_mean_temp)){n1 <- "_GMT"}else{n1 <- ""}
data <- get(load(file =paste0("data/manipulate_aggr/ERA5_monthly_1940_2022_",degrees,"_disc_",b,lim,comp,combi,superf,n1,".rda")))
###########################################################################
start <- NULL
steps <- 100
last <- 10000
load(paste0("data/trainindices/ERA5_monthly_1940_2022_indTRAIN1.rda"))
learndata <- data[indTRAIN1,]
for (m in 0:(last/steps)) {
  #for (m in 0:0) {
  i <- m*steps
  j <- i+steps
  
  if (algo == "hc") {
    berekening <- hc(learndata, max.iter = steps, score = score, start = start)
  } else if (algo == "tabu"){
    berekening <- tabu(learndata, max.iter = steps, score = score, start = start)
  }
  assign(paste0("train1_",algo,"_disc_",b,"_",score,lim,comp,combi,superf,n1,"_",k,"_",i,"_",j,"i"), berekening)
  
  save(list = paste0(algo,"_disc_",b,"_",score,lim,comp,combi,superf,n1,"_",k,"_",i,"_",j,"i"),
       file = paste0("data/",algo,"iterations/ERA5_monthly_1940_2022_",degrees,"_disc_",b,lim,comp,combi,superf,n1,"/perm",k,"train/train1_",algo,"_disc_",b,"_",score,lim,comp,combi,superf,"_",k,"_",i,"_",j,"i.rda"))
  
  if(m==0){
    start <- berekening
  } else if(narcs(berekening) == narcs(start)){
    break
  } else {start <- berekening}
}
###########################################################################
start <- NULL
steps <- 100
last <- 10000
load(paste0("data/trainindices/ERA5_monthly_1940_2022_indTRAIN1.rda"))
learndata <- data[indTRAIN1,]
for (m in 0:(last/steps)) {
  #for (m in 0:0) {
  i <- m*steps
  j <- i+steps
  
  if (algo == "hc") {
    berekening <- hc(learndata, max.iter = steps, score = score, start = start)
  } else if (algo == "tabu"){
    berekening <- tabu(learndata, max.iter = steps, score = score, start = start)
  }
  assign(paste0("train1_",algo,"_disc_",b,"_",score,lim,comp,combi,superf,n1,"_",k,"_",i,"_",j,"i"), berekening)
  
  save(list = paste0("train1_",algo,"_disc_",b,"_",score,lim,comp,combi,superf,n1,"_",k,"_",i,"_",j,"i"),
       file = paste0("data/",algo,"iterations/ERA5_monthly_1940_2022_",degrees,"_disc_",b,lim,comp,combi,superf,n1,"/perm",k,"train/train1_",algo,"_disc_",b,"_",score,lim,comp,combi,superf,"_",k,"_",i,"_",j,"i.rda"))
  
  if(m==0){
    start <- berekening
  } else if(narcs(berekening) == narcs(start)){
    break
  } else {start <- berekening}
}
q()
